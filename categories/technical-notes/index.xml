<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>technical notes on Andre Frankenthal</title>
    <link>https://frankenthal.dev/categories/technical-notes/</link>
    <description>Recent content in technical notes on Andre Frankenthal</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Oct 2019 23:21:01 -0400</lastBuildDate>
    
	    <atom:link href="https://frankenthal.dev/categories/technical-notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pyxrootd bindings on macOS</title>
      <link>https://frankenthal.dev/post/pyxrootd-bindings-in-macos/</link>
      <pubDate>Sat, 19 Oct 2019 23:21:01 -0400</pubDate>
      
      <guid>https://frankenthal.dev/post/pyxrootd-bindings-in-macos/</guid>
      <description>&lt;p&gt;The homebrew version of xrootd doesn’t come with python bindings for some reason. The python bindings are needed for reading remote ROOT files with python/uproot (not needed for C++ ROOT).&lt;/p&gt;

&lt;p&gt;Adapted from: &lt;a href=&#34;https://github.com/lgray/coffeandbacon/blob/master/setup_lcg.sh&#34; target=&#34;_blank&#34;&gt;https://github.com/lgray/coffeandbacon/blob/master/setup_lcg.sh&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# issue with python3 bindings, see https://sft.its.cern.ch/jira/browse/SPI-1198
wget https://github.com/xrootd/xrootd/archive/v4.8.3.tar.gz 
tar zxf v4.8.3.tar.gz &amp;amp;&amp;amp; rm -f v4.8.3.tar.gz 
cp xrd_setup.py xrootd-4.8.3/bindings/python/ 
pushd xrootd-4.8.3/bindings/python/ 
python xrd_setup.py install
popd
rm -rf xrootd-4.8.3 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check whatever version of xrootd you have and substitute the numbers above. You can find the xrd_setup.py file &lt;a href=&#34;static/files/xrd_setup.py&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(or from here &lt;a href=&#34;https://github.com/lgray/coffeandbacon/blob/master/xrd_setup.py&#34; target=&#34;_blank&#34;&gt;https://github.com/lgray/coffeandbacon/blob/master/xrd_setup.py&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;My pyxrootd ended up being installed here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/lib/python3.7/site-packages/pyxrootd-4.8.3-py3.7-macosx-10.12-x86_64.egg/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To check open up python3 and try to import pyxroot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tmux on lxplus</title>
      <link>https://frankenthal.dev/post/tmux-on-lxplus/</link>
      <pubDate>Sat, 19 Oct 2019 23:14:25 -0400</pubDate>
      
      <guid>https://frankenthal.dev/post/tmux-on-lxplus/</guid>
      <description>&lt;p&gt;For some reason when running my own local version of tmux on lxplus, it is possible to create a new session and detach and reattach to it successfully while in the &lt;em&gt;same&lt;/em&gt; ssh session. However, when logging out of lxplus and then back in, and upon trying to reattach to the tmux session, this error is shown:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;open terminal failed: missing or unsuitable terminal: xterm-256color&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally after a year I have traced the problem to the root cause, with this very helpful reference:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mail-archive.com/tmux-users@lists.sourceforge.net/msg01272.html&#34; target=&#34;_blank&#34;&gt;https://www.mail-archive.com/tmux-users@lists.sourceforge.net/msg01272.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problem is the &amp;lsquo;terminfo database entry can’t be found for “xterm”’. The solution is simple: just export in bash the terminfo location before starting the tmux session:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export TERMINFO=/usr/share/terminfo
$ cd ~/programs/tmux
$ ./tmux new
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then after a new SSH session run the export command again and attach to the tmux session (actually, might not need the export command when reattaching):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export TERMINFO=/usr/share/terminfo
$ cd ~/programs/tmux
$ ./tmux a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Might also just copy the export command to the .bashrc file.&lt;/p&gt;

&lt;p&gt;More details about diagnostics: I think the problem might be that I accidentally used some native libraries to compile the local tmux (in /usr/lib/ and /usr/lib64) which was seen from running ‘ldd ./tmux’, though I’m not sure. Could also be that the ncurses version used was different than the local one I downloaded. Not really sure, but in any case exporting the TERMINFO info solves it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
